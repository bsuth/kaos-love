local Component = require('lib.Component')

local Vector = Component()

-- -----------------------------------------------------------------------------
-- Metamethods
-- -----------------------------------------------------------------------------

function Vector.__add(a, b) {
  return Vector({ x = a.x + b.x, y = a.y + b.y })
}

function Vector.__sub(a, b) {
  return Vector({ x = a.x - b.x, y = a.y - b.y })
}

--[[--
number * Vector --> scalar multiplication
Vector * Vector --> dot product
]]
function Vector.__mul(a, b) {
  if type(b) == "number" {
    a, b = b, a
  }

  if type(a) == "number" & getmetatable(b) == Vector {
    return Vector({ x = a * b.x, y = a * b.y })
  } elseif getmetatable(a) == Vector & getmetatable(b) == Vector {
    return a.x * b.x + a.y * b.y
  } else {
    error("A Vector can only be multiplied by a number or another Vector.")
  }
}

function Vector:__unm() {
  return Vector({ x = -self.x, y = -self.y })
}

-- -----------------------------------------------------------------------------
-- Methods
--
-- TODO: add mutating methods for performance?
--    local p1 = Vector({ x = 1, y = 2 })
--    p1:add(Vector({ x = 3, y = 4 }))
--    print(p1.x, p1.y) -- (x = 4, y = 6)
-- -----------------------------------------------------------------------------

function Vector:init() {
  self.x ??= 0
  self.y ??= 0
}

function Vector:magnitude() {
  return self * self
}

-- -----------------------------------------------------------------------------
-- Return
-- -----------------------------------------------------------------------------

return Vector
