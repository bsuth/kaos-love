local Component = require('lib.Component')

local Vector = Component()

-- -----------------------------------------------------------------------------
-- Metamethods
-- -----------------------------------------------------------------------------

function Vector.__constructor(t) {
  t.x ??= 0
  t.y ??= 0
}

function Vector.__add(a, b) {
  return Vector:new({
      x = a.x + b.x,
      y = a.y + b.y
  })
}

function Vector.__sub(a, b) {
  return Vector:new({
      x = a.x - b.x,
      y = a.y - b.y
  })
}

--[[--
number * Vector --> scalar multiplication
Vector * Vector --> dot product
]]
function Vector.__mul(a, b) {
  if type(b) == "number" {
    a, b = b, a
  }

  if type(a) == "number" & getmetatable(b) == Vector {
    return Vector:new({
      x = a * b.x,
      y = a * b.y,
    })
  } elseif getmetatable(a) == Vector & getmetatable(b) == Vector {
    return a.x * b.x + a.y * b.y
  } else {
    error("A Vector can only be multiplied by a number or another Vector.")
  }
}

function Vector:__unm() {
  return Vector:new({
      x = -self.x,
      y = -self.y,
  })
}

-- -----------------------------------------------------------------------------
-- Methods
-- -----------------------------------------------------------------------------

function Vector:magnitude() {
  return self * self
}

-- -----------------------------------------------------------------------------
-- Return
-- -----------------------------------------------------------------------------

return Vector
